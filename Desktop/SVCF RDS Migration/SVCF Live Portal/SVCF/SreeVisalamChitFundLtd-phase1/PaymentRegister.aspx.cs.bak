using System;
using System.Collections;
using System.Configuration;
using System.Data;
using System.Linq;
using System.Web;
using System.Web.Security;
using System.Web.UI;
using System.Web.UI.WebControls;
using System.Web.UI.WebControls.WebParts;
using System.Web.UI.HtmlControls;
using System.Xml.Linq;
using DevExpress.Web.ASPxGridView;
using DevExpress.Web.ASPxMenu;
using DevExpress.Data;
using DevExpress.Web.ASPxGridView.Export;
using DevExpress.XtraPrinting;
using System.IO;
using DevExpress.XtraPrintingLinks;
using System.Drawing;
using SVCF_BusinessAccessLayer;

using SVCF_DataAccessLayer;

namespace SreeVisalamChitFundLtd_phase1
{
    public partial class PaymentRegister : System.Web.UI.Page
    {
        #region Object
        BusinessLayer balayer = new BusinessLayer();
        
        #endregion
        private System.Drawing.Image headerImage;
        protected void Page_Load(object sender, EventArgs e)
        {
         //   select();
            if (!IsPostBack)
            {
                GetGroupMember();
                txtFromDate.Text = "31/03/2013";
                txtToDate.Text = "31/05/2013";
               // select();
                grid.DataBind();
                foreach (GridViewColumn column in grid.Columns)
                {
                    if (column is GridViewDataColumn)
                    {
                        ((GridViewDataColumn)column).Settings.AutoFilterCondition = AutoFilterCondition.Contains;
                    }
                }
            }
        }
        public void GetGroupMember()
        {
            ddlChit.DataSource = null;
            ddlChit.DataBind();
            DataTable dtChitGrp = balayer.GetDataTable("SELECT distinct `groupmaster`.`GROUPNO`,`voucher`.`ChitGroupId` FROM `svcf`.`voucher` join `svcf`.`groupmaster` on (`groupmaster`.`Head_Id`=`voucher`.`ChitGroupId`) where `voucher`.`Trans_Type`=2 and `voucher`.`BranchID`='" + balayer.ToobjectstrEvenNull(Session["Branchid"]) + "'");
            for (int iR = 0; iR < dtChitGrp.Rows.Count; iR++)
            {
                dtChitGrp.Rows[iR][0] = dtChitGrp.Rows[iR][0].ToString();
            }
            ddlChit.DataSource = dtChitGrp;
            ddlChit.DataTextField = "GROUPNO";
            ddlChit.DataValueField = "ChitGroupId";
            ddlChit.DataBind();
            ListItem li = new ListItem("--select--", "--select--");
            ddlChit.Items.Insert(0, li);
            ListItem ll = new ListItem("All", "All");
            ddlChit.Items.Insert(1, ll);
        }
        protected void select()
        {
            if (ddlChit.SelectedValue == "--select--")
            {
                AccessDataSource1.ConnectionString = CommonClassFile.ConnectionString;
                AccessDataSource1.SelectCommand = @"SELECT (select documentno from `svcf`.`documentdetails` where `membertogroupmaster`.`MemberID`=`documentdetails`.`prizedmemberid` and `membertogroupmaster`.`GroupID`=`documentdetails`.`groupid`) as documentno,(select infavourof from `svcf`.`documentdetails` where `membertogroupmaster`.`MemberID`=`documentdetails`.`prizedmemberid` and `membertogroupmaster`.`GroupID`=`documentdetails`.`groupid`) as infavourof,`voucher`.`Voucher_No`,`membertogroupmaster`.`GrpMemberID` as `ChitNo`,`trans_payment`.`DrawNo` as `InstNo`,`trans_payment`.`AuctionDate` as `DateOfAuction`,`trans_payment`.`ChitAmount`,`membertogroupmaster`.`MemberName` as `NameOfThePrizedSubscriber`,`trans_payment`.`PrizedAmount` as `PrizeMoney`,`trans_payment`.`PaymentApplyedOn` as `FormSentForApprovalOn`,`trans_payment`.`PaymentDate` as `DateOfPayment`,`trans_payment`.`AOSanctionNo`, `trans_payment`.`ApprovedOn`,`trans_payment`.`GuarantorName`,`trans_payment`.`NextDrawNo` as `NextInstalmentNo`,`trans_payment`.`NextDueAmount` as `NextInstalmentAmount`,concat(`groupmaster`.`ChitAgreementNo`, '/', `groupmaster`.`ChitAgreementYear`) AS `CANo`,`groupmaster`.`GROUPNO` as `ChitGroup`,`trans_payment`.`ChitGroupID`,`trans_payment`.`TokenNumber` FROM `svcf`.`voucher` JOIN `svcf`.`trans_payment` ON (`voucher`.`DualTransactionKey`=`trans_payment`.`DualTransactionKey`) join `svcf`.`membertogroupmaster` on (`trans_payment`.`TokenNumber`=`membertogroupmaster`.`Head_Id`) join `svcf`.`groupmaster` on (`voucher`.`ChitGroupId`=`groupmaster`.`Head_Id`) where `voucher`.`ChitGroupId`=0 and `voucher`.`BranchID`=0 and `voucher`.`ChoosenDate` between '' and '' and `voucher`.`Trans_Type`=2 AND (`voucher`.`Voucher_Type`='C') and ((`voucher`.`RootID`=3) or (`voucher`.`RootID`=12))";
            }
            else if (ddlChit.SelectedValue == "All")
            {
                grid.SettingsPager.Mode = GridViewPagerMode.ShowPager;
                grid.SettingsPager.Position = PagerPosition.TopAndBottom;
                AccessDataSource1.ConnectionString = CommonClassFile.ConnectionString;
                AccessDataSource1.SelectCommand = @"SELECT (select documentno from `svcf`.`documentdetails` where `membertogroupmaster`.`MemberID`=`documentdetails`.`prizedmemberid` and `membertogroupmaster`.`GroupID`=`documentdetails`.`groupid`) as documentno,(select infavourof from `svcf`.`documentdetails` where `membertogroupmaster`.`MemberID`=`documentdetails`.`prizedmemberid` and `membertogroupmaster`.`GroupID`=`documentdetails`.`groupid`)  as infavourof,`voucher`.`Voucher_No`,`membertogroupmaster`.`GrpMemberID` as `ChitNo`,`trans_payment`.`DrawNo` as `InstNo`,`trans_payment`.`AuctionDate` as `DateOfAuction`,`trans_payment`.`ChitAmount`,`membertogroupmaster`.`MemberName` as `NameOfThePrizedSubscriber`,`trans_payment`.`PrizedAmount` as `PrizeMoney`,`trans_payment`.`PaymentApplyedOn` as `FormSentForApprovalOn`,`trans_payment`.`PaymentDate` as `DateOfPayment`,`trans_payment`.`AOSanctionNo`, `trans_payment`.`ApprovedOn`,`trans_payment`.`GuarantorName`,`trans_payment`.`NextDrawNo` as `NextInstalmentNo`,`trans_payment`.`NextDueAmount` as `NextInstalmentAmount`,concat(`groupmaster`.`ChitAgreementNo`, '/', `groupmaster`.`ChitAgreementYear`) AS `CANo`,`groupmaster`.`GROUPNO` as `ChitGroup`,`trans_payment`.`ChitGroupID`,`trans_payment`.`TokenNumber` FROM `svcf`.`voucher` left join `svcf`.`trans_payment` ON (`voucher`.`DualTransactionKey`=`trans_payment`.`DualTransactionKey`) left join `svcf`.`membertogroupmaster` on (`trans_payment`.`TokenNumber`=`membertogroupmaster`.`Head_Id`) join `svcf`.`groupmaster` on (`voucher`.`ChitGroupId`=`groupmaster`.`Head_Id`) where `voucher`.`BranchID`=" + Session["Branchid"] + " and `voucher`.`ChoosenDate` between '" + balayer.indiandateToMysqlDate(txtFromDate.Text) + "' and '" + balayer.indiandateToMysqlDate(txtToDate.Text) + "' and `voucher`.`Trans_Type`=2 AND (`voucher`.`Voucher_Type`='D') and ((`voucher`.`RootID`=5)) AND `voucher`.`Head_Id` in (SELECT NodeID FROM `svcf`.`headstree` where `headstree`.`ParentID` IN (SELECT NodeID FROM `svcf`.`headstree` where `headstree`.`ParentID` IN (40,41,42))) order by `InstNo`";
            }
            else
            {
                grid.SettingsPager.Mode = GridViewPagerMode.ShowAllRecords;
                AccessDataSource1.ConnectionString = CommonClassFile.ConnectionString;
                AccessDataSource1.SelectCommand = @"SELECT (select documentno from `svcf`.`documentdetails` where `membertogroupmaster`.`MemberID`=`documentdetails`.`prizedmemberid` and `membertogroupmaster`.`GroupID`=`documentdetails`.`groupid`) as documentno,(select infavourof from `svcf`.`documentdetails` where `membertogroupmaster`.`MemberID`=`documentdetails`.`prizedmemberid` and `membertogroupmaster`.`GroupID`=`documentdetails`.`groupid`) as infavourof,`voucher`.`Voucher_No`,`membertogroupmaster`.`GrpMemberID` as `ChitNo`,`trans_payment`.`DrawNo` as `InstNo`,`trans_payment`.`AuctionDate` as `DateOfAuction`,`trans_payment`.`ChitAmount`,`membertogroupmaster`.`MemberName` as `NameOfThePrizedSubscriber`,`trans_payment`.`PrizedAmount` as `PrizeMoney`,`trans_payment`.`PaymentApplyedOn` as `FormSentForApprovalOn`,`trans_payment`.`PaymentDate` as `DateOfPayment`,`trans_payment`.`AOSanctionNo`, `trans_payment`.`ApprovedOn`,`trans_payment`.`GuarantorName`,`trans_payment`.`NextDrawNo` as `NextInstalmentNo`,`trans_payment`.`NextDueAmount` as `NextInstalmentAmount`,concat(`groupmaster`.`ChitAgreementNo`, '/', `groupmaster`.`ChitAgreementYear`) AS `CANo`,`groupmaster`.`GROUPNO` as `ChitGroup`,`trans_payment`.`ChitGroupID`,`trans_payment`.`TokenNumber` FROM `svcf`.`voucher` JOIN `svcf`.`trans_payment` ON (`voucher`.`DualTransactionKey`=`trans_payment`.`DualTransactionKey`) join `svcf`.`membertogroupmaster` on (`trans_payment`.`TokenNumber`=`membertogroupmaster`.`Head_Id`) join `svcf`.`groupmaster` on (`voucher`.`ChitGroupId`=`groupmaster`.`Head_Id`) where `voucher`.`ChitGroupId`=" + ddlChit.SelectedValue + " and `voucher`.`BranchID`=" + Session["Branchid"] + " and `voucher`.`ChoosenDate` between '" + balayer.indiandateToMysqlDate(txtFromDate.Text) + "' and '" + balayer.indiandateToMysqlDate(txtToDate.Text) + "' and `voucher`.`Trans_Type`=2 AND (`voucher`.`Voucher_Type`='D') and ((`voucher`.`RootID`=5)) and `voucher`.`Head_Id` in (SELECT NodeID FROM `svcf`.`headstree` where `headstree`.`ParentID`=" + ddlChit.SelectedValue + ") order by `InstNo`";
            }
        }


        protected void BtnStatisticsGo_Click(object sender, EventArgs e)
        {
            select();
            grid.DataBind();
        }

        void ApplyLayout(int layoutIndex)
        {
            grid.BeginUpdate();
            try
            {
                grid.ClearSort();
                switch (layoutIndex)
                {
                    case 0:
                        grid.GroupBy(grid.Columns["ChitGroup"]);
                        break;
                    case 1:
                        break;
                    case 2:
                        break;
                }
            }
            finally
            {
                grid.EndUpdate();
            }
            grid.CollapseAll();
        }
        protected void grid_CustomCallback(object sender, ASPxGridViewCustomCallbackEventArgs e)
        {
        }

        protected void Export_click(object sender, MenuItemEventArgs e)
        {
            if (e.Item.Text.ToString() == "PDF")
            {
                using (this.headerImage = System.Drawing.Image.FromFile(Server.MapPath("~\\Images\\visalam.png")))
                {
                    PrintingSystem ps = new PrintingSystem();
                    PrintableComponentLink gridPayment = new PrintableComponentLink(ps);
                    gridPayment.Component = gridExport;
                    Link header = new Link();
                    CompositeLink compositeLink = new CompositeLink(ps);
                    header.CreateDetailArea += new CreateAreaEventHandler(header_CreateDetailArea);
                    compositeLink.Links.AddRange(new object[] {header, gridPayment });
                    string leftColumn = "Pages : [Page # of Pages #]";
                    string rightColumn = "Date: [Date Printed]\r\nTime: " + DateTime.Now.ToString("hh:mm tt");
                    PageHeaderFooter phf = compositeLink.PageHeaderFooter as PageHeaderFooter;
                    phf.Footer.Content.Clear();
                    phf.Footer.Content.AddRange(new string[] { rightColumn, leftColumn });
                    phf.Footer.LineAlignment = BrickAlignment.Center;
                    using (MemoryStream stream = new MemoryStream())
                    {
                        compositeLink.PaperKind = System.Drawing.Printing.PaperKind.A4;
                        compositeLink.Landscape = true;
                        compositeLink.CreateDocument(false);
                        compositeLink.PrintingSystem.Document.AutoFitToPagesWidth = 1;
                        compositeLink.PrintingSystem.ExportToPdf(stream);
                        WriteToResponse("PaymentRegister", true, "pdf", stream);
                    }
                }
            }
            else if (e.Item.Text.ToString() == "XLSX")
            {
                gridExport.WriteXlsxToResponse();
            }
        }
        void header_CreateDetailArea(object sender, CreateAreaEventArgs e)
        {
            e.Graph.BorderWidth = 0;
            Rectangle r = new Rectangle(0, 0, 50, 50);
            e.Graph.DrawImage(headerImage, r);
            TextBrick tb = new TextBrick();
            tb.Text = "SREE VISALAM CHIT FUND LTD.,";
            tb.Font = new Font("Arial", 10, FontStyle.Bold);
            tb.Rect = new RectangleF(50, 15, 260, 19);
            tb.BorderWidth = 0;
            tb.BackColor = Color.Transparent;
            tb.HorzAlignment = DevExpress.Utils.HorzAlignment.Center;
            tb.VertAlignment = DevExpress.Utils.VertAlignment.Top;
            e.Graph.DrawBrick(tb);
            TextBrick tb1 = new TextBrick();
            tb1.Text = "BRANCH : " + Session["BranchName"];
            tb1.Font = new Font("Arial", 9, FontStyle.Bold);
            tb1.Rect = new RectangleF(50, 34, 260, 25);
            tb1.BorderWidth = 0;
            tb1.BackColor = Color.Transparent;
            tb1.HorzAlignment = DevExpress.Utils.HorzAlignment.Center;
            tb1.VertAlignment = DevExpress.Utils.VertAlignment.Top;
            e.Graph.DrawBrick(tb1);
        }
        void WriteToResponse(string fileName, bool saveAsFile, string fileFormat, MemoryStream stream)
        {
            if (Page == null || Page.Response == null)
                return;
            string disposition = saveAsFile ? "attachment" : "inline";
            Page.Response.Clear();
            Page.Response.Buffer = false;
            Page.Response.AppendHeader("Content-Type", string.Format("application/{0}", fileFormat));
            Page.Response.AppendHeader("Content-Transfer-Encoding", "binary");
            Page.Response.AppendHeader("Content-Disposition",
                string.Format("{0}; filename={1}.{2}", disposition, fileName, fileFormat));
            Page.Response.BinaryWrite(stream.GetBuffer());
            Page.Response.End();
        }
    }
}
